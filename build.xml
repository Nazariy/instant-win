<?xml version="1.0" encoding="UTF-8"?>
<project name="Instant Win" basedir="." default="main">
    
    <property name="dir.src" value="${project.basedir}/src"/>
    <property name="dir.build" value="${project.basedir}/build"/>
    <property name="dir.vendor" value="${project.basedir}/vendor"/>
    <property name="dir.reports" value="${project.basedir}/test-reports"/>
    <property name="dir.reports.pdepend" value="${dir.reports}/pdepend"/>
    <property name="dir.docs" value="${dir.reports}/docs"/>
    <property name="dir.docs.phpdoc" value="${dir.docs}/phpdoc"/>

    <!-- Filesets -->
    <fileset id="sourcecode" dir="${dir.src}">
        <include name="**/*.php"/>
    </fileset>

    <fileset id="release" dir="${project.basedir}">
        <include name="scripts/**" />
        <include name="src/**" />
        <include name="vendor/**" />
        <include name="README.md" />
        <include name="LICENSE" />
    </fileset>

    <!-- Default target -->
    <target name="main">
        <echo msg="See:"/>
        <echo msg=" * phing -l"/>
    </target>

	<target name="check"
		description="All quality checks"
		depends="build:prepare,build:check"/>

    <target name="documentation"
            description="Generate all documentation"
            depends="build:prepare,doc:phpdoc,doc:phploc"/>

    <target name="build"
            description="Creates release build"
            depends="build:prepare,build:package"/>

    <!-- SUBTARGETS -->

    <!-- Check target -->
    <target name="build:check"
            depends="check:cs, check:md, check:depend, check:cpd"/>

    <!-- Project build prepare -->
    <target name="build:prepare">
        <echo msg="Creating build directories ..."/>
        <mkdir dir="${dir.docs}"/>
        <mkdir dir="${dir.build}"/>
        <mkdir dir="${dir.docs.phpdoc}"/>
        <mkdir dir="${dir.reports}"/>
        <mkdir dir="${dir.reports.pdepend}"/>
    </target>

    <!-- phploc -->
    <target name="doc:phploc">
        <phploc reportType="txt" reportDirectory="${dir.reports}">
            <fileset refid="sourcecode"/>
        </phploc>
    </target>

    <!-- PHPDOC API documentation target -->
    <target name="doc:phpdoc" depends="build:prepare">
        <phpdoc2 title="${phing.project.name} :: API Documentation" destdir="${dir.docs.phpdoc}" template="responsive-twig">
            <fileset refid="sourcecode"/>
        </phpdoc2>
    </target>

    <!-- PSR2 code sniffer -->
    <target name="check:cs" depends="build:prepare">
        <echo msg="Checking coding standard ..."/>
        <phpcodesniffer standard="PSR2" showWarnings="true">
            <fileset refid="sourcecode"/>
            <formatter type="checkstyle" outfile="${dir.reports}/checkstyle.xml"/>
            <formatter type="full" outfile="${dir.reports}/checkstyle.txt"/>
        </phpcodesniffer>
    </target>

    <!-- copy/paste detector -->
    <target name="check:cpd" depends="build:prepare">
        <echo msg="Checking similar code blocks ..."/>

        <!-- @todo Put minTokens back to 70 (default) -->
        <!-- @see http://www.phing.info/docs/guide/stable/apcs49.html -->
        <phpcpd minTokens="20" minLines="5">
            <fileset refid="sourcecode"/>
            <formatter type="pmd" outfile="${dir.reports}/pmd-cpd.xml"/>
            <formatter type="default" outfile="${dir.reports}/cpd.txt"/>
        </phpcpd>
    </target>

    <!-- Mess detector -->
    <target name="check:md">
        <echo msg="Generating code metrics ..."/>
        <phpmd rulesets="codesize,design,naming,unusedcode">
            <fileset refid="sourcecode"/>
            <formatter type="xml" outfile="${dir.reports}/pmd.xml"/>
        </phpmd>
    </target>

    <!-- Code dependency -->
    <target name="check:depend">
        <echo msg="Checking coupling and dependency ..."/>
        <phpdepend>
            <fileset refid="sourcecode"/>
            <logger type="jdepend-xml" outfile="${dir.reports.pdepend}/jdepend.xml"/>
            <logger type="jdepend-chart" outfile="${dir.reports.pdepend}/dependencies.svg"/>
            <logger type="overview-pyramid" outfile="${dir.reports.pdepend}/overview-pyramid.svg"/>
            <logger type="summary-xml" outfile="${dir.reports.pdepend}/summary.xml"/>
            <logger type="phpunit-xml" outfile="${dir.reports.pdepend}/phpunit.xml"/>
        </phpdepend>
    </target>

    <!-- Package Build -->
    <target name="build:package">
        <!-- Build Tar file -->
        <!-- @todo Rewrite to use exec instead of having dependency on Archive_Tar (which doesn't play nice with Composer) -->
        <tar basedir="${project.basedir}" destfile="${dir.build}/release.tar.gz" compression="gzip" includeemptydirs="true">
            <fileset refid="release"/>
        </tar>
    </target>

</project>
